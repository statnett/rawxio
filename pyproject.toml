[project]
name = "rawxio"
description = "Import/Export rawx"
authors = [{name="Statnett DataScience", email="Datascience.Drift@Statnett.no"}]
requires-python = ">=3.10"
dynamic = ["version"]

dependencies = [
  "pandas",
]

[tool.uv]
dev-dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-integration",
]

[tool.setuptools_scm]
version_scheme="release-branch-semver"
local_scheme = "no-local-version"

[tool.ruff]
line-length = 100

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]

extend-select = [
  "A", # flake8-builtins
  "ANN", # flake8-annotations
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "C90", # mccabe
  "COM", # flake8-commas
  "D", # pydocstyle
  "DTZ", # flake8-datetimez
  "E", "W", # pycodestyle
  "F", # Pyflakes
  "FLY", # flynt
  "FURB", # refurb
  "G", # flake8-logging-format
  "I", # isort
  "LOG",  # flake8-logging
  "N", # pep8-nameing
  "NPY", # numpy specific rules
  "PERF", # Perflint
  "PIE", # flake8-pie
  "RUF", # Ruff specific rules
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "T100", # debug statements
  "TCH", # flake8-type-checking
  "TRY", # tryceratops
  "UP", # pyupgrade
  "YTT", # flake8-2020
]

ignore = ['S101', 'COM812', 'ANN101', 'ANN102', 'ANN401', 'TRY003', 'D100',  'D101', 'D102', 'D103', 'D104', 'D105', 'D107']

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"docs/conf.py" = ["A001"]
"tests/test*.py" = ["ANN201"]

[tool.ruff.lint.isort]
known-first-party = []
known-local-folder = ["abot_opf", "tests"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
              "pragma: no cover",
              "raise AssertionError",
              "raise NotImplementedError",
              "if verbose:",
              "if 0:",
              "if False:",
              ]
skip_covered = true
show_missing = true
precision = 2

[tool.coverage.run]
branch = true
source = ["rawxio"]

[tool.pytest.ini_options]
log_file = "pytest.log"
log_level = "DEBUG"
log_file_format = "%(asctime)s - %(name)s - %(levelname)s: %(message)s"
norecursedirs = "_build tmp*  __pycache__ src prof wheel_files"
markers = [
  "integration: Mark test as an integration test",
]
filterwarnings = [
]

[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"
