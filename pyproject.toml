[project]
name = "rawxio"
description = "Import/Export rawx"
requires-python = ">=3.10"
authors = [
  { name = "Statnett DataScience", email = "Datascience.Drift@Statnett.no" },
]
dependencies = [
  "pandas",
]
dynamic = ["version"]

[dependency-groups]
dev = [
  "pytest",
  "pytest-cov",
  "pytest-integration",
]

[build-system]
requires = ["setuptools-scm>=8", "setuptools>=64"]
build-backend = "setuptools.build_meta"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
  "pragma: no cover",
  "raise AssertionError",
  "raise NotImplementedError",
  "if verbose:",
  "if 0:",
  "if False:",
]
skip_covered = true
show_missing = true
precision = 2

[tool.coverage.run]
branch = true
source = ["rawxio"]

[tool.pytest.ini_options]
log_file = "pytest.log"
log_level = "DEBUG"
log_file_format = "%(asctime)s - %(name)s - %(levelname)s: %(message)s"
norecursedirs = "_build tmp*  __pycache__ src prof wheel_files"
markers = [
  "integration: Mark test as an integration test",
]
filterwarnings = []

[tool.ruff]
line-length = 100

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "S101",
  "COM812",
  "ANN401",
  "TRY003",
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D107",
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"docs/conf.py" = ["A001"]
"tests/test*.py" = ["ANN201"]

[tool.ruff.lint.isort]
known-first-party = []
known-local-folder = ["abot_opf", "tests"]

[tool.setuptools_scm]
version_scheme = "release-branch-semver"
local_scheme = "no-local-version"
